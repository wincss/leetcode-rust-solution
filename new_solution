#!/bin/bash

FUNNAME=$1
CONTENT=$(pbpaste)
STYLE=function

if [ -z "$FUNNAME" ]
then
    if [[ "$CONTENT" =~ "impl Solution"* ]]
    then
        FUNNAME=$(printf '%s\n' "$CONTENT" | perl -n -e'/pub fn ([^ (]+)/ && print $1')
        STYLE=function
    else
        FUNNAME=$(printf '%s\n' "$CONTENT" | perl -n -e'/struct ([^ ({]+)/ && print $1')
        STYLE=class
        # TODO: format name to snake_case
    fi
fi

test -z "$FUNNAME" && exit

DIR="src/$FUNNAME"
test -e "$DIR/mod.rs" && exit
echo "Creating code snippet for ${FUNNAME}..."
mkdir -p "$DIR"

cat > "$DIR/mod.rs" <<EOF
mod solution;
#[cfg(test)]
mod tests;
EOF

cat > "$DIR/tests.rs" <<EOF
use crate::*;

#[test]
fn case_1() {
    // Solution::$FUNNAME
    todo!();
}
EOF

if [ -z "$CONTENT" ]
then
    cat > "$DIR/solution.rs" <<EOF
use crate::*;

impl Solution {
    pub fn $FUNNAME() {
        todo!();
    }
}
EOF
else
    if [[ "$STYLE" == "function" ]]
    then
        printf '%s\n' "$CONTENT" | perl -p -e'
            s/^(\s*)(pub fn.*)$/\1\2\n\1    todo();/g' > "$DIR/solution.rs"
    else
        printf '%s\n' "$CONTENT" | perl -p -e'
            s/(?<!pub )struct/pub struct/g;
            s/(?<!pub )fn/pub fn/g;
            s/^(\s*)(pub fn.*)$/\1#[allow(dead_code)]\n\1\2\n\1    todo();/g' > "$DIR/solution.rs"
        # TODO: remove doc comment in the end
    fi
fi

grep "\<$FUNNAME\>" src/lib.rs > /dev/null || echo "pub mod $FUNNAME;" >> src/lib.rs
rustfmt src/lib.rs
